import Head from 'next/head'
import styled from 'styled-components';
import { getVendors, Vendors } from '../api/vendors';
import Dashboard from '../components/dashboard';
import Map from '../components/map';

interface HomeProps {
  GOOGLE_MAPS_API_KEY: string,
  vendors: Vendors
}

const MainStyled = styled.main`
  display: flex;
`;

export default function Home({ GOOGLE_MAPS_API_KEY, vendors }: HomeProps) {
  return (
    <>
      <Head>
        <title>Vendors</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainStyled>
        <Dashboard vendors={vendors} />
        <Map GOOGLE_MAPS_API_KEY={GOOGLE_MAPS_API_KEY}/>
      </MainStyled>
    </>
  )
}

// Because it’s meant to be run at build time, you won’t be able to use data that’s only available during request time, 
// such as query parameters or HTTP headers.
// Need to lazy load rest of the vendors if paginated on client side after to fill out vendors prop (or state we create?)
export async function getStaticProps() {
  const GOOGLE_MAPS_API_KEY = process.env.GOOGLE_MAPS_API_KEY ?? '';
  let vendors; 
  try {
    vendors = await getVendors<Vendors>(); //{ Items: [{name: 'lol', locaiton: 'lolz'}]} 
  } catch (e) {
    if (e instanceof Error) {
      vendors = { Items: [] }
    } else {
      throw new Error('getVendors unexpected error');   
    }
  }

  return { 
    props: {
      GOOGLE_MAPS_API_KEY,
      vendors
    },
    revalidate: 120, // seconds
  }
}
